#include "mz_filter_brightness.h"

static const byte	gBrightnessFilter_Curve_Table[] = {
		0,1,3,5,7, 9, 11, 12, 14, 16, 18, 20, 21, 23, 25, 27, 29, 31,32, 34, 36, 38, 40, 41, 43, 45, 47, 48, 50, 52, 54, 55, 57, 59,61, 62, 64, 66, 67, 69, 71, 73,74, 76, 77, 79, 81, 82, 84, 86,87, 89, 90, 92, 93, 95, 97, 98,100, 101, 103, 104, 105, 107,108, 110, 111, 113, 114, 115,117, 118, 119, 121, 122, 123,125, 126, 127, 128, 130, 131,132, 133, 135, 136, 137, 138,139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152,153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164,165, 166, 167, 168, 168, 169, 170, 171, 172, 173, 174, 175,176, 176, 177, 178, 179, 180, 181, 181, 182, 183, 184, 185,185, 186, 187, 188, 188, 189, 190, 191, 191, 192, 193, 194,194, 195, 196, 197, 197, 198, 199, 199, 200, 201, 201, 202,203, 203, 204, 205, 205, 206, 207, 207, 208, 208, 209, 210,210, 211, 212, 212, 213, 213, 214, 215, 215, 216, 216, 217,218, 218, 219, 219, 220, 221, 221, 222, 222, 223, 223, 224,225, 225, 226, 226, 227, 227, 228, 228, 229, 229, 230, 231,231, 232, 232, 233 ,233, 234, 234, 235, 235, 236, 236, 237,237, 238, 238, 239, 239, 240, 240, 241, 241, 242, 242, 243,243, 244, 244, 245, 245, 246, 246, 247, 247, 248, 248, 249,249, 250, 250, 251, 251, 252, 252, 253, 253, 254, 254, 255 ,
};

static const byte	gBrightnessFilter_CPRBlend_ColorTable[] = {
	0,0,0,0,1,1,1,2,2,2,3,3,3,3,4,4,4,5,5,5,6,6,6,6,7,7,8,8,9,9,9,9,11,11,11,11,12,13,13,13,14,15,15,15,16,17,17,18,18,19,19,20,21,22,22,23,23,24,25,26,27,27,28,29,30,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,51,53,54,55,56,57,59,60,62,63,64,66,68,69,71,72,74,76,77,79,81,82,84,86,88,89,92,93,95,97,99,101,103,106,107,110,111,114,116,119,121,123,126,128,130,132,135,137,140,142,144,146,148,150,152,154,156,158,160,162,164,166,168,169,171,173,174,176,178,179,181,183,184,186,187,189,190,192,193,194,196,197,199,200,201,202,203,204,206,207,208,209,210,211,212,214,215,216,217,217,218,219,220,221,222,223,223,224,225,226,227,228,228,229,230,230,231,232,233,233,234,234,235,236,236,237,237,238,238,239,240,240,240,241,242,242,242,242,243,244,244,244,245,245,245,246,247,247,247,248,248,248,248,249,249,249,250,250,250,251,251,251,251,252,252,252,253,253,253,254,255,
};

static const byte	gBrightnessFilter_CPGBlend_ColorTable[] = {
	0,0,0,0,1,1,1,2,2,2,3,3,4,4,4,5,6,6,6,7,8,8,8,9,10,10,11,11,12,12,13,14,15,15,16,16,17,18,19,19,20,21,21,22,23,24,25,26,27,27,28,29,30,31,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,53,54,55,56,57,59,60,61,62,63,64,66,67,68,70,71,72,73,74,76,77,79,80,81,82,84,86,87,89,90,91,93,94,96,97,98,100,102,103,104,106,108,110,111,113,114,116,117,119,121,122,124,126,128,129,131,133,134,136,138,139,140,142,144,146,147,149,150,152,153,155,156,158,159,160,162,164,165,167,168,169,171,172,174,175,176,177,179,180,182,183,184,185,186,187,189,190,191,193,194,195,197,197,199,199,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,222,224,224,226,227,227,228,229,230,230,231,232,232,233,234,235,236,236,237,237,238,239,240,240,241,241,242,243,244,244,244,245,245,246,247,247,247,248,249,249,249,250,251,251,251,251,252,252,252,253,253,253,254,255,
};

static const byte	gBrightnessFilter_CPBBlend_ColorTable[] = {
	44,45,45,46,46,47,47,49,49,50,50,51,51,52,53,54,54,55,55,56,57,58,58,59,59,60,60,62,62,63,63,64,64,65,66,67,67,68,68,69,70,71,71,72,72,73,74,75,75,76,76,77,77,78,79,80,80,81,81,82,83,84,84,85,85,86,86,87,88,89,89,90,90,91,92,93,93,94,94,95,96,97,97,98,98,99,99,100,101,102,102,103,103,104,105,106,106,107,107,108,109,110,110,111,111,112,112,114,114,115,115,116,116,117,118,119,119,120,120,121,122,123,123,124,124,125,125,127,127,128,128,129,129,130,131,132,132,133,133,134,135,136,136,137,137,138,139,140,140,141,141,142,142,143,144,145,145,146,146,147,148,149,149,150,150,151,152,153,153,154,154,155,155,156,157,158,158,159,159,160,161,162,162,163,163,164,165,166,166,167,167,168,168,169,170,171,171,172,172,173,174,175,175,176,176,177,178,179,179,180,180,181,181,182,183,184,184,185,185,186,187,188,188,189,189,190,191,192,192,193,193,194,194,195,196,197,197,198,198,199,200,201,201,202,202,203,204,205,205,206,206,207,207,208,209,210,
};

static const byte	gBrightnessFilter_ColorRTable[] = {
	0,0,0,0,1,1,1,3,3,3,5,5,5,5,7,7,7,9,9,9,11,11,11,11,12,12,14,14,16,16,16,16,20,20,20,20,21,23,23,23,25,27,27,27,29,31,31,32,32,34,34,36,38,40,40,41,41,43,45,47,48,48,50,52,54,54,55,57,59,61,62,64,66,67,69,71,73,74,76,77,79,81,82,86,87,89,92,93,95,97,98,101,103,105,107,108,111,114,115,118,119,122,125,126,128,131,132,135,137,139,141,144,145,147,149,152,154,156,159,160,163,164,167,168,171,173,175,177,179,181,182,185,186,188,190,191,193,194,196,197,199,200,201,203,204,205,207,208,208,210,211,212,213,214,215,216,217,218,219,219,221,221,222,223,223,225,225,226,227,227,228,228,229,230,231,231,232,232,233,233,234,235,235,236,236,236,237,237,238,238,239,239,239,240,240,241,241,241,242,242,242,243,243,244,244,244,244,245,245,245,246,246,246,246,247,247,247,247,248,248,248,248,248,249,249,249,249,250,250,250,250,251,251,251,251,251,251,251,252,252,252,252,252,252,253,253,253,253,253,253,253,254,254,254,254,255,
};

static const byte	gBrightnessFilter_ColorGTable[] = {
	0,0,0,0,1,1,1,3,3,3,5,5,7,7,7,9,11,11,11,12,14,14,14,16,18,18,20,20,21,21,23,25,27,27,29,29,31,32,34,34,36,38,38,40,41,43,45,47,48,48,50,52,54,55,55,57,59,61,62,64,66,67,69,71,73,74,76,77,79,81,82,84,86,87,89,92,93,95,97,98,101,103,104,105,107,108,111,113,114,117,118,119,121,122,125,126,128,130,131,132,135,137,138,141,142,143,145,146,148,149,151,153,155,156,157,159,161,163,164,166,167,168,169,171,173,174,176,177,179,180,181,183,184,185,187,188,188,190,191,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,208,210,210,212,212,213,213,215,215,216,217,218,218,219,219,221,221,222,223,223,224,225,225,226,226,227,228,228,229,229,230,231,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,238,239,239,240,241,241,241,242,242,242,243,243,243,244,244,245,245,245,246,246,246,247,247,247,248,248,248,249,249,249,249,250,250,250,251,251,251,251,252,252,252,252,253,253,253,253,253,253,253,254,254,254,254,255,
};

static const byte	gBrightnessFilter_ColorBTable[] = {
	77,79,79,81,81,82,82,86,86,87,87,89,89,90,92,93,93,95,95,97,98,100,100,101,101,103,103,105,105,107,107,108,108,110,111,113,113,114,114,115,117,118,118,119,119,121,122,123,123,125,125,126,126,127,128,130,130,131,131,132,133,135,135,136,136,137,137,138,139,141,141,142,142,143,144,145,145,146,146,147,148,149,149,151,151,152,152,153,154,155,155,156,156,157,158,159,159,160,160,161,162,163,163,164,164,165,165,167,167,168,168,168,168,169,170,171,171,172,172,173,174,175,175,176,176,176,176,178,178,179,179,180,180,181,181,182,182,183,183,184,185,185,185,186,186,187,188,188,188,189,189,190,190,191,191,192,192,193,193,194,194,195,195,196,196,197,197,198,198,199,199,199,199,200,201,201,201,202,202,203,203,204,204,205,205,205,206,207,207,207,207,208,208,208,209,210,210,210,210,211,212,212,212,213,213,213,214,215,215,215,215,216,216,216,217,218,218,218,218,219,219,220,220,221,221,221,222,222,222,223,223,223,223,224,225,225,225,226,226,226,227,227,227,228,228,228,229,229,229,230,230,231,231,231,232,232,
};

void		mz_filterBrightness(byte* yuv, int width, int height)
{
	register int i = width * height / 2;
	register int r = 0, g = 0, b = 0;
	register int y1 = 0, u1 = 0, v1 = 0, y2 = 0, u2 = 0, v2 = 0;
	register byte* dp = yuv;
	while (i--) {
		y1 = YUYV_PY1(dp);
		u1 = u2 = YUYV_PU(dp);
		y2 = YUYV_PY2(dp);
		v1 = v2 = YUYV_PV(dp);

		r = *(gYUV2RGB_YTable + y1) + *(gYUV2R_VTable + v1);
		g = *(gYUV2RGB_YTable + y1) - *(gYUV2G_VTable + v1) - *(gYUV2G_UTable + u1);
		b = *(gYUV2RGB_YTable + y1) + *(gYUV2B_UTable + u1);

		r = Clamp(r);
		g = Clamp(g);
		b = Clamp(b);

		r = *(gBrightnessFilter_ColorRTable + r);
		g = *(gBrightnessFilter_ColorGTable + g);
		b = *(gBrightnessFilter_ColorBTable + b);

		y1 = *(gRGB2Y_RTable + r) + *(gRGB2Y_GTable + g) + *(gRGB2Y_BTable + b) + 16;
		u1 = *(gRGB2U_RTable + r) + *(gRGB2U_GTable + g) + *(gRGB2U_BTable + b) + 128;
		v1 = *(gRGB2V_RTable + r) + *(gRGB2V_GTable + g) + *(gRGB2V_BTable + b) + 128;

		r = *(gYUV2RGB_YTable + y2) + *(gYUV2R_VTable + v2);
		g = *(gYUV2RGB_YTable + y2) - *(gYUV2G_VTable + v2) - *(gYUV2G_UTable + u2);
		b = *(gYUV2RGB_YTable + y2) + *(gYUV2B_UTable + u2);

		r = Clamp(r);
		g = Clamp(g);
		b = Clamp(b);

		r = *(gBrightnessFilter_ColorRTable + r);
		g = *(gBrightnessFilter_ColorGTable + g);
		b = *(gBrightnessFilter_ColorBTable + b);

		y2 = *(gRGB2Y_RTable + r) + *(gRGB2Y_GTable + g) + *(gRGB2Y_BTable + b) + 16;
		u2 = *(gRGB2U_RTable + r) + *(gRGB2U_GTable + g) + *(gRGB2U_BTable + b) + 128;
		v2 = *(gRGB2V_RTable + r) + *(gRGB2V_GTable + g) + *(gRGB2V_BTable + b) + 128;

		YUYV_PY1(dp) = y1;
		YUYV_PY2(dp) = y2;
		YUYV_PU(dp) = ((u1 + u2) >> 1);
		YUYV_PV(dp) = ((v1 + v2) >> 1);
		dp += 4;
	}
}

void		mz_imageFilterBrightness(byte* image, int width, int height, int depth) {
	register int i = width * height;
	register byte* dp = image;
	while (i--) {
		RGB_PR(dp) = *(gBrightnessFilter_ColorRTable + RGB_PR(dp));
		RGB_PG(dp) = *(gBrightnessFilter_ColorGTable + RGB_PG(dp));
		RGB_PB(dp) = *(gBrightnessFilter_ColorBTable + RGB_PB(dp));
		dp += depth;
	}
}