#include "mz_filter_greenhouse.h"

static const byte	gGreenHouseFilter_ColorRTable[] = {
	0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,2,2,2,2,4,4,4,4,5,6,6,6,7,8,8,8,9,10,10,11,11,12,12,13,14,15,15,16,16,17,18,19,20,20,21,22,23,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,42,43,44,46,47,48,49,50,52,53,55,56,57,59,61,62,64,65,67,69,70,72,74,75,77,79,81,82,85,86,88,90,92,94,96,99,100,103,104,107,109,112,114,116,119,121,123,125,128,130,133,135,137,139,141,143,145,147,149,151,153,155,157,159,161,162,164,166,167,169,171,172,174,176,177,179,180,182,183,185,186,187,189,190,192,193,194,195,196,197,199,200,201,202,203,204,205,207,208,209,210,210,211,212,213,214,215,216,216,217,218,219,220,221,221,222,223,223,224,225,226,226,227,227,228,229,229,230,230,231,231,232,233,233,233,234,235,235,235,235,236,237,237,237,238,238,238,239,240,240,240,241,241,241,241,242,242,242,243,243,243,244,244,244,244,245,245,245,246,246,246,247,248,
};

static const byte	gGreenHouseFilter_ColorGTable[] = {
	14,14,14,14,15,15,15,16,16,16,17,17,18,18,18,19,20,20,20,21,22,22,22,23,24,24,25,25,26,26,27,28,29,29,30,30,31,32,33,33,34,35,35,36,37,38,39,40,41,41,42,43,44,45,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,67,68,69,70,71,73,74,75,76,77,78,80,81,82,84,85,86,87,88,90,91,93,94,95,96,98,100,101,103,104,105,107,108,110,111,112,114,116,117,118,120,122,124,125,127,128,130,131,133,135,136,138,140,142,143,145,147,148,150,152,153,154,156,158,160,161,163,164,166,167,169,170,172,173,174,176,178,179,181,182,183,185,186,188,189,190,191,193,194,196,197,198,199,200,201,203,204,205,207,208,209,211,211,213,213,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,236,238,238,240,241,241,242,243,244,244,245,246,246,247,248,249,250,250,251,251,252,253,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
};

static const byte	gGreenHouseFilter_ColorBTable[] = {
	80,81,81,82,82,83,84,85,85,86,86,87,87,88,89,90,90,91,91,92,93,94,94,95,95,96,97,98,98,99,99,100,100,101,102,103,103,104,104,105,106,107,107,108,108,109,110,111,111,112,112,113,113,114,115,116,116,117,117,118,119,120,120,121,121,122,122,123,124,125,125,126,126,127,128,129,129,130,130,131,132,133,133,134,134,135,136,137,137,138,138,139,139,140,141,142,142,143,143,144,145,146,146,147,147,148,149,150,150,151,151,152,152,153,154,155,155,156,156,157,158,159,159,160,160,161,162,163,163,164,164,165,165,166,167,168,168,169,169,170,171,172,172,173,173,174,175,176,176,177,177,178,178,179,180,181,181,182,182,183,184,185,185,186,186,187,188,189,189,190,190,191,191,192,193,194,194,195,195,196,197,198,198,199,199,200,201,202,202,203,203,204,204,205,206,207,207,208,208,209,210,211,211,212,212,213,214,215,215,216,216,217,217,218,219,220,220,221,221,222,223,224,224,225,225,226,227,228,228,229,229,230,230,231,232,233,233,234,234,235,236,237,237,238,238,239,240,241,241,242,242,243,243,244,245,246,
};

void		mz_filterGreenHouse(byte* yuv, int width, int height)
{
	register int i = width * height / 2;
	register int r = 0, g = 0, b = 0;
	register int y1 = 0, u1 = 0, v1 = 0, y2 = 0, u2 = 0, v2 = 0;
	register byte* dp = yuv;
	while (i--) {
		y1 = YUYV_PY1(dp);
		u1 = u2 = YUYV_PU(dp);
		y2 = YUYV_PY2(dp);
		v1 = v2 = YUYV_PV(dp);

		r = *(gYUV2RGB_YTable + y1) + *(gYUV2R_VTable + v1);
		g = *(gYUV2RGB_YTable + y1) - *(gYUV2G_VTable + v1) - *(gYUV2G_UTable + u1);
		b = *(gYUV2RGB_YTable + y1) + *(gYUV2B_UTable + u1);

		r = Clamp(r);
		g = Clamp(g);
		b = Clamp(b);

		r = *(gGreenHouseFilter_ColorRTable + r);
		g = *(gGreenHouseFilter_ColorGTable + g);
		b = *(gGreenHouseFilter_ColorBTable + b);


		y1 = *(gRGB2Y_RTable + r) + *(gRGB2Y_GTable + g) + *(gRGB2Y_BTable + b) + 16;
		u1 = *(gRGB2U_RTable + r) + *(gRGB2U_GTable + g) + *(gRGB2U_BTable + b) + 128;
		v1 = *(gRGB2V_RTable + r) + *(gRGB2V_GTable + g) + *(gRGB2V_BTable + b) + 128;

		// -------------------------------

		r = *(gYUV2RGB_YTable + y2) + *(gYUV2R_VTable + v2);
		g = *(gYUV2RGB_YTable + y2) - *(gYUV2G_VTable + v2) - *(gYUV2G_UTable + u2);
		b = *(gYUV2RGB_YTable + y2) + *(gYUV2B_UTable + u2);

		r = Clamp(r);
		g = Clamp(g);
		b = Clamp(b);

		r = *(gGreenHouseFilter_ColorRTable + r);
		g = *(gGreenHouseFilter_ColorGTable + g);
		b = *(gGreenHouseFilter_ColorBTable + b);

		y2 = *(gRGB2Y_RTable + r) + *(gRGB2Y_GTable + g) + *(gRGB2Y_BTable + b) + 16;
		u2 = *(gRGB2U_RTable + r) + *(gRGB2U_GTable + g) + *(gRGB2U_BTable + b) + 128;
		v2 = *(gRGB2V_RTable + r) + *(gRGB2V_GTable + g) + *(gRGB2V_BTable + b) + 128;

		YUYV_PY1(dp) = y1;
		YUYV_PY2(dp) = y2;
		YUYV_PU(dp) = ((u1 + u2) >> 1);
		YUYV_PV(dp) = ((v1 + v2) >> 1);
		dp += 4;
	}
}

void		mz_imageFilterGreenHouse(byte* image, int width, int height, int depth) {
	register int i = width * height;
	register byte* dp = image;
	while (i--) {
		RGB_PR(dp) = *(gGreenHouseFilter_ColorRTable + RGB_PR(dp));
		RGB_PG(dp) = *(gGreenHouseFilter_ColorGTable + RGB_PG(dp));
		RGB_PB(dp) = *(gGreenHouseFilter_ColorBTable + RGB_PB(dp));
		dp += depth;
	}
}