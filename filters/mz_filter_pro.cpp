#include "mz_filter_pro.h"

static const byte gPROFilter_Curve_Table[] = {
	0, 1, 3, 4, 6, 7, 9, 10, 12, 13, 15, 17, 18, 20, 21, 23, 24, 26, 27, 29,30, 32, 33, 35, 36, 38, 39, 41, 42, 44, 45, 47, 48, 50, 51, 53, 54, 56,57, 59, 60, 61, 63, 64, 66, 67, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81,82, 83, 85, 86, 87, 89, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102,103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 119,120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 132, 133, 134,135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148,149, 150, 151, 152, 153, 154, 155, 156, 157, 157, 158, 159, 160, 161,162, 163, 164, 165, 166, 167, 167, 168, 169, 170, 171, 172, 173, 174,174, 175, 176, 177, 178, 179, 179, 180, 181, 182, 183, 184, 184, 185,186, 187, 188, 188, 189, 190, 191, 192, 192, 193, 194, 195, 195, 196,197, 198, 198, 199, 200, 201, 202, 202, 203, 204, 204, 205, 206, 207,207, 208, 209, 210, 210, 211, 212, 213, 213, 214, 215, 215, 216, 217,217, 218, 219, 219, 220, 221, 222, 222, 223, 224, 224, 225, 226, 226,227, 228, 228, 229, 230, 230, 231, 232, 232, 233, 234, 234, 235, 236,236, 237, 238, 238, 239, 240, 240, 241, 242, 242, 243, 243, 244, 245,245, 246, 247, 247, 248, 249, 249, 250, 251, 251, 252, 253, 253, 254,255,
};

static const byte	gPROFilter_ColorRTable[] = {
	0,0,1,3,3,4,6,6,7,9,9,10,12,12,13,15,15,17,18,18,20,21,21,23,24,24,26,27,29,29,30,32,33,33,35,36,36,38,39,41,41,42,44,45,47,47,48,50,51,53,53,54,56,57,59,60,60,61,63,64,66,67,69,70,71,71,73,74,75,77,78,79,81,82,83,85,86,87,89,90,91,92,94,96,97,99,100,101,102,103,105,107,108,109,111,112,114,115,116,117,120,121,122,124,125,126,128,130,131,133,134,136,137,138,140,141,143,144,146,147,149,150,152,154,155,157,158,159,161,162,164,165,167,168,169,171,172,174,174,176,177,179,179,181,182,184,184,185,187,188,188,190,191,192,193,194,195,196,197,198,198,199,201,202,202,203,204,205,206,207,207,208,209,210,210,211,212,213,213,214,215,216,217,217,217,218,219,219,220,221,222,222,223,224,224,225,226,226,226,227,228,228,229,230,230,230,231,232,232,233,233,234,234,235,235,236,236,237,237,238,238,239,239,240,240,241,241,242,242,242,243,243,244,244,245,245,245,246,247,247,247,248,248,249,249,249,250,251,251,251,252,252,253,253,254,255,
};

static const byte	gPROFilter_ColorGTable[] = {
	0,0,1,3,3,4,6,6,7,9,9,10,12,13,13,15,17,18,18,20,21,23,23,24,26,27,29,29,30,32,33,35,36,36,38,39,41,42,44,44,45,47,48,50,51,53,54,56,57,57,59,60,61,63,64,66,67,69,70,71,73,74,75,77,78,79,81,82,83,85,86,87,89,90,91,92,94,95,96,97,100,101,102,103,105,106,107,108,109,112,113,114,115,116,117,119,121,122,123,124,125,127,128,130,131,132,134,135,136,137,138,140,141,142,143,145,146,147,149,150,151,152,154,155,156,157,158,159,161,162,163,164,166,167,167,169,170,171,172,174,174,175,176,178,179,179,180,182,183,184,184,186,187,188,188,189,191,192,192,193,194,195,196,197,198,198,199,200,201,202,203,204,204,205,206,207,207,208,209,210,210,212,213,213,214,215,215,216,217,217,218,219,219,220,221,222,222,223,224,224,225,226,226,226,227,228,228,229,230,230,231,232,232,233,233,234,234,235,236,236,237,237,238,238,239,240,240,240,241,242,242,243,243,243,244,245,245,245,246,247,247,247,248,249,249,249,250,251,251,251,252,252,253,253,254,255,
};

static const byte	gPROFilter_ColorBTable[] = {
	30,32,33,35,36,38,38,39,41,42,44,45,45,47,48,50,51,53,53,54,56,57,59,60,60,61,63,64,66,67,67,69,70,71,73,74,74,75,77,78,79,81,81,82,83,85,86,87,87,89,90,91,92,94,94,95,96,97,99,100,100,101,102,103,105,106,106,107,108,109,111,112,112,113,114,115,116,117,117,119,120,121,122,123,123,124,125,126,127,128,128,130,131,132,133,134,134,135,136,137,138,139,139,140,141,142,143,144,144,145,146,147,148,149,149,150,151,152,153,154,154,155,156,157,157,158,159,160,160,161,162,163,164,165,165,166,167,167,168,169,169,170,171,172,173,174,174,174,175,176,177,178,178,179,179,180,181,182,182,183,184,184,185,186,186,187,188,188,189,190,190,191,192,192,193,194,194,195,195,196,197,198,198,198,199,200,201,202,202,202,203,204,204,205,205,206,207,207,208,209,209,210,210,211,212,213,213,213,214,215,215,216,216,217,217,218,219,219,219,220,221,222,222,223,223,224,224,225,226,226,226,227,228,228,229,230,230,230,231,232,232,233,233,234,234,235,236,236,236,237,238,238,239,240,240,240,
};

void		mz_filterPRO(byte* yuv, int width, int height)
{
	register int i = width * height / 2;
	register int r = 0, g = 0, b = 0;
	register int y1 = 0, u1 = 0, v1 = 0, y2 = 0, u2 = 0, v2 = 0;
	register byte* dp = yuv;
	while (i--) {
		y1 = YUYV_PY1(dp);
		u1 = u2 = YUYV_PU(dp);
		y2 = YUYV_PY2(dp);
		v1 = v2 = YUYV_PV(dp);

		r = *(gYUV2RGB_YTable + y1) + *(gYUV2R_VTable + v1);
		g = *(gYUV2RGB_YTable + y1) - *(gYUV2G_VTable + v1) - *(gYUV2G_UTable + u1);
		b = *(gYUV2RGB_YTable + y1) + *(gYUV2B_UTable + u1);

		r = Clamp(r);
		g = Clamp(g);
		b = Clamp(b);

		r = *(gPROFilter_ColorRTable + r);
		g = *(gPROFilter_ColorGTable + g);
		b = *(gPROFilter_ColorBTable + b);

		y1 = *(gRGB2Y_RTable + r) + *(gRGB2Y_GTable + g) + *(gRGB2Y_BTable + b) + 16;
		u1 = *(gRGB2U_RTable + r) + *(gRGB2U_GTable + g) + *(gRGB2U_BTable + b) + 128;
		v1 = *(gRGB2V_RTable + r) + *(gRGB2V_GTable + g) + *(gRGB2V_BTable + b) + 128;

		// -------------------------------

		r = *(gYUV2RGB_YTable + y2) + *(gYUV2R_VTable + v2);
		g = *(gYUV2RGB_YTable + y2) - *(gYUV2G_VTable + v2) - *(gYUV2G_UTable + u2);
		b = *(gYUV2RGB_YTable + y2) + *(gYUV2B_UTable + u2);

		r = Clamp(r);
		g = Clamp(g);
		b = Clamp(b);

		r = *(gPROFilter_ColorRTable + r);
		g = *(gPROFilter_ColorGTable + g);
		b = *(gPROFilter_ColorBTable + b);

		y2 = *(gRGB2Y_RTable + r) + *(gRGB2Y_GTable + g) + *(gRGB2Y_BTable + b) + 16;
		u2 = *(gRGB2U_RTable + r) + *(gRGB2U_GTable + g) + *(gRGB2U_BTable + b) + 128;
		v2 = *(gRGB2V_RTable + r) + *(gRGB2V_GTable + g) + *(gRGB2V_BTable + b) + 128;

		YUYV_PY1(dp) = y1;
		YUYV_PY2(dp) = y2;
		YUYV_PU(dp) = ((u1 + u2) >> 1);
		YUYV_PV(dp) = ((v1 + v2) >> 1);
		dp += 4;
	}
}

void		mz_imageFilterPRO(byte* image, int width, int height, int depth) {
	register int i = width * height;
	register byte* dp = image;
	while (i--) {
		RGB_PR(dp) = *(gPROFilter_ColorRTable + RGB_PR(dp));
		RGB_PG(dp) = *(gPROFilter_ColorGTable + RGB_PG(dp));
		RGB_PB(dp) = *(gPROFilter_ColorBTable + RGB_PB(dp));
		dp += depth;
	}
}